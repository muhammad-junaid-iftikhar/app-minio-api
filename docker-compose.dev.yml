version: "3.8"

services:
  app-minio-api:
    container_name: app-minio-api
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    environment:
      - SERVER_PORT=${SERVER_PORT}
      - MINIO_ENDPOINT=app-minio-drive
      - MINIO_PORT=${MINIO_API_PORT}
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}
      - MINIO_USE_SSL=${MINIO_USE_SSL}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
      - PROJECT_ID=${PROJECT_ID}
      - APP_NAME=${APP_NAME}
      - APP_SOURCE=${APP_SOURCE}
    depends_on:
      app-minio-drive:
        condition: service_healthy
    restart: on-failure
    volumes:
      - .:/app
      - air_tmp:/tmp
    command: air
    networks:
      - app-network
      - microservices-network

  app-minio-drive:
    image: minio/minio:latest
    container_name: app-minio-drive
    ports:
      - "${MINIO_API_PORT}:9000" # API port
      - "${MINIO_CONSOLE_PORT}:9001" # Console port
    volumes:
      - ${volume_minio_path}:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: server --console-address ":9001" /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - app-network
      - microservices-network

  app-minio-vector:
    image: timberio/vector:latest-alpine
    container_name: app-minio-vector
    command: ["-c", "/etc/vector/vector.toml"]
    volumes:
      - ${vector_volume_path}:/var/lib/vector
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./vector.toml:/etc/vector/vector.toml:ro
    environment:
      - VECTOR_LOG=info
    networks:
      - microservices-network

volumes:
  air_tmp:
    driver: local

networks:
  app-network:
    driver: bridge
  microservices-network:
    external: true
